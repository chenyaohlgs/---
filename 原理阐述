#1  问题描述试编程实现基于信息熵进行划分选择的决策树算法，并为表4.3中数据生成一棵决策树，表4.3数据如下：
    详见  ——————  西瓜.txt

#2  问题分析
    观察数据我们可以得知除了‘密度’，‘含糖率’的两个属性为连续值，其他全为离散数据，因此只需要对ID3算法加以优化，将离散数据转换成离散数据就可以套用啦，
    代码中主要采用了递归调用的方式，具体如下：
    1  获取每一特征属性的信息增益，选择信息增益最大的一个作为根节点，
    2  将该节点所包含的属性往下分支，创建叶子节点，重复计算信息增益
    3  根据特征属性的种类进行继续扩展，知道设定的循环层结束，或者种类截止为止
    
#3  优化版ID3算法实例（分三个文件） 
    Decisiontree.py(总文件)
    trees.py（决策树生成文件）
    treePlotter.py（绘图文件）
#4  总结
    ID3：利用“信息增益”进行节点划分
    C4.5：以信息增益为基础，结合增益率
    CART：采用了基尼系数
